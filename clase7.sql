DROP SCHEMA IF EXISTS COVID19;
CREATE SCHEMA COVID19; 
USE COVID19;

CREATE TABLE UBICACION(
    ID_UBIGEO VARCHAR(6)   ,
    DEPARTAMENTO  VARCHAR(70)  ,
    PROVINCIA VARCHAR(70) ,
    DISTRITO VARCHAR (70),
    PRIMARY KEY(ID_UBIGEO));

CREATE TABLE PERSONA(
    ID_PERSONA VARCHAR (8),
    ID_UBIGEO VARCHAR (6),
    PRIMARY KEY(ID_PERSONA),
    FOREIGN KEY(ID_UBIGEO) REFERENCES UBICACION(ID_UBIGEO)
	-- ,FOREIGN KEY(ID_UBIGEO) REFERENCES UBICACION1(ID_UBIGEO),
	-- FOREIGN KEY(ID_UBIGEO) REFERENCES UBICACION2(ID_UBIGEO)
     
     );
  
  
SELECT * FROM   UBICACION ;
SELECT * FROM PERSONA;
    
    
    
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('10101','AMAZONAS','CHACHAPOYAS','CHACHAPOYAS');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('10106','AREQUIPA','CONDESUYOS','CHUQUIBAMBA');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('10108','AMAZONAS','CHACHAPOYAS','HUANCAS');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('110507','JUNIN','TARMA','PALCAMAYO');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('120114','JUNIN','HUANCAYO','EL TAMBO');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('130101','LA LIBERTAD','TRUJILLO','TRUJILLO');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('130106','LA LIBERTAD','TRUJILLO','LAREDO');
INSERT INTO UBICACION(`ID_UBIGEO`,`DEPARTAMENTO`,`PROVINCIA`,`DISTRITO`) VALUES ('131201','LA LIBERTAD','VIRU','VIRU');

INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('14567426','10101');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('56210239','10106');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('36210239','10108');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('56210243','110507');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('16823100','120114');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('13866414','130101');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('15507536','130106');
INSERT INTO PERSONA(`ID_PERSONA`,`ID_UBIGEO`) VALUES ('13866329','131201');

SELECT * FROM   UBICACION LIMIT 4;

SELECT * FROM PERSONA;

select * from persona 
where   id_ubigeo =   10101 ;

select * from ubicacion 
where departamento = 'AREQUIPA' ;

select * from ubicacion 
where departamento = 'LA LIBERTAD';

select * from ubicacion 
where upper(departamento) = upper('junin');


SELECT ID_PERSONA, DEPARTAMENTO, PROVINCIA
 FROM UBICACION JOIN PERSONA
ON UBICACION.ID_UBIGEO = PERSONA.ID_UBIGEO
ORDER BY ID_PERSONA
;

DROP VIEW VW_UBICACION_DEPARTAMENTO ;

CREATE OR REPLACE VIEW VW_UBICACION_DEPARTAMENTO AS 
(select * from ubicacion 
where departamento = 'AREQUIPA');

SELECT * FROM VW_UBICACION_DEPARTAMENTO ;


CREATE  VIEW  VW_PERSONA AS 
( SELECT * FROM PERSONA );

SELECT * FROM VW_PERSONA;

SELECT * FROM VW_UBICACION_PERSONA ;

-- OR REPLACE
CREATE  OR REPLACE  VIEW VW_UBICACION_PERSONA AS
(SELECT ID_PERSONA, DEPARTAMENTO, PROVINCIA FROM UBICACION JOIN PERSONA
ON UBICACION.ID_UBIGEO = PERSONA.ID_UBIGEO
ORDER BY ID_PERSONA);

CREATE OR REPLACE VIEW VW_UBICACION_PERSONAS AS (
SELECT * FROM VW_UBICACION_PERSONA
WHERE PROVINCIA IN ( SELECT PROVINCIA 
					FROM UBICACION 
                    WHERE PROVINCIA = 'TRUJILLO')
                    )
;

SELECT * FROM VW_UBICACION_PERSONAS 
WHERE ID_PERSONA = 13866414 ;



CREATE OR REPLACE VIEW VW_UBICACION_POR_LETRA AS (
SELECT *  FROM UBICACION 
WHERE DEPARTAMENTO  LIKE '%R%') ; 



SELECT COUNT(*) AS NUMERO FROM UBICACION 
WHERE DEPARTAMENTO  LIKE '%LA LIBERTAD%';


SELECT COUNT(*) AS NUMERO FROM UBICACION 
WHERE DEPARTAMENTO LIKE CONCAT('%', LETRA , '%');




drop function if exists FN_TOTAL_DEPART ;
DELIMITER // 
-- CREATE FUNCTION FN_TOTAL_DEPART (P_LETRA VARCHAR(50) ,  PEPITO INT   )
CREATE FUNCTION FN_TOTAL_DEPART (P_LETRA VARCHAR(50)  )
RETURNS VARCHAR(50)
DETERMINISTIC
BEGIN
-- DECLARE DEPARTAMENTOS VARCHAR(50);
DECLARE NUMERO INT ;

SELECT COUNT(*) INTO NUMERO FROM UBICACION 
WHERE DEPARTAMENTO LIKE  CONCAT('%', P_LETRA , '%');

-- SELECT DISTINCT DEPARTAMENTO  INTO DEPARTAMENTOS FROM UBICACION 
-- WHERE DEPARTAMENTO LIKE  CONCAT('%', P_LETRA , '%');


-- SELECT DISTINCT DEPARTAMENTO  INTO DEPARTAMENTOS FROM UBICACION 
-- WHERE DEPARTAMENTO = PEPITO ;

-- RETURN DEPARTAMENTOS;
RETURN NUMERO;
END//
DELIMITER ;


SELECT FN_TOTAL_DEPART('R' );
-- SELECT FN_TOTAL_DEPART('AMAZONAS' , 2);


SELECT DISTINCT DEPARTAMENTO  AS DEPARTAMENTOS FROM UBICACION 
WHERE DEPARTAMENTO LIKE  CONCAT('%',P_LETRA,'%');



-- Error Code: 1172. Result consisted of more than one row

SELECT DEPARTAMENTO  AS DEPARTAMENTOS FROM UBICACION 
WHERE DEPARTAMENTO LIKE  CONCAT('%AMAZONAS%');

drop function if exists FN_TOTAL_DEPART ;
DELIMITER // 
CREATE FUNCTION FN_TOTAL_DEPART ( )
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE NUMERO INT;
SELECT COUNT(*) INTO NUMERO FROM UBICACION 
WHERE DEPARTAMENTO LIKE CONCAT('%A%');
RETURN NUMERO;
END//
DELIMITER ;

SELECT COUNT(*) AS NUMERO
FROM UBICACION WHERE DEPARTAMENTO
LIKE CONCAT('%', 'L' , '%'); 

SELECT *  FROM UBICACION WHERE DEPARTAMENTO
LIKE CONCAT('%', 'V' , '%'); 

select FN_TOTAL_DEPART ('A');
-- Error Code: 1305. FUNCTION covid19.FN_TOTAL_DEPART does not exist
select FN_TOTAL_DEPART();

SELECT NOW();
SELECT CONCAT_WS(';','PRUEBA',' FINAL');



SELECT * FROM UBICACION 
ORDER BY PROVINCIA ASC; -- ASC / DESC 

drop procedure if exists SP_ORDENAR ;
DELIMITER //
CREATE  PROCEDURE SP_ORDENAR (INOUT  PARAM_ORDER VARCHAR(48),
							 INOUT PARAM_ASC_DESC VARCHAR(48))
BEGIN
-- declare t1 int ;
-- select * from libros order by autor desc ;
SET @D1 = CONCAT('SELECT * FROM ubicacion U ORDER BY',' ',PARAM_ORDER,' ',PARAM_ASC_DESC);  -- Siempre concatenar. Set, muestra el formato del resultado
PREPARE param_stmt FROM @D1;
EXECUTE param_stmt;
DEALLOCATE PREPARE param_stmt;
END //
DELIMITER ;

SELECT * FROM UBICACION ORDER BY DISTRITO DESC;


-- Orden por DEPARTAMENTO

SET @PARAM_ORDER = 'departamento';
SET @PARAM_ASC_DESC = 'DESC';

CALL SP_ORDENAR (@PARAM_ORDER ,@PARAM_ASC_DESC);

-- Orden por PROVINCIA

SET @PARAM_ORDER = 'PROVINCIA';
SET @PARAM_ASC_DESC = 'DESC';

CALL SP_ORDENAR (@PARAM_ORDER ,@PARAM_ASC_DESC);

-- Orden por DISTRITO

SET @PARAM_ORDER = 'DISTRITO';
SET @PARAM_ASC_DESC = 'DESC';

CALL SP_ORDENAR (@PARAM_ORDER ,@PARAM_ASC_DESC);





drop table if exists LOG_AUDITORIA_2;
CREATE TABLE IF NOT EXISTS LOG_AUDITORIA_2(
ID_LOG INT AUTO_INCREMENT ,
DEPARTAMENTO varchar(70) DEFAULT NULL,
ID_UBIGEO VARCHAR (6),-- CAMPONUEVO_CAMPOANTERIOR VARCHAR(N)
NOMBRE_DE_ACCION VARCHAR(10) ,
NOMBRE_TABLA VARCHAR(50) ,
USUARIO VARCHAR(100) ,
FECHA_UPD_INS_DEL1 DATE ,
FECHA_UPD_INS_DEL2 TIME ,
PRIMARY KEY (ID_LOG));


## CREANDO TRIGGER

DROP TRIGGER IF EXISTS TRG_LOG_UBICACION ;
DELIMITER $$
CREATE TRIGGER TRG_LOG_UBICACION BEFORE UPDATE ON COVID19.UBICACION
FOR EACH ROW
BEGIN
INSERT INTO LOG_AUDITORIA_2 
(DEPARTAMENTO, ID_UBIGEO, NOMBRE_DE_ACCION , NOMBRE_TABLA ,USUARIO, FECHA_UPD_INS_DEL1, FECHA_UPD_INS_DEL2) 
VALUES ( CONCAT('CAMPO ANTERIOR,' ,  
OLD.DEPARTAMENTO , ' CAMPO NUEVO : ', NEW.DEPARTAMENTO), NEW.ID_UBIGEO, 'UPDATE' , 'DEPARTAMENTO' ,CURRENT_USER(), NOW(), NOW());
END$$
DELIMITER ;


##REALIZANDO CAMBIOS
USE COVID19;
SELECT * FROM COVID19.UBICACION;
UPDATE COVID19.UBICACION SET DEPARTAMENTO = 'CUSCO' 
WHERE ID_UBIGEO = 10101;  ##Realizando el cambio (10101 hace referencia a AMAZONAS)
-- Error Code: 1049. Unknown database 'covid'

SET SQL_SAFE_UPDATES = 0;

SELECT * FROM LOG_AUDITORIA_2 ;